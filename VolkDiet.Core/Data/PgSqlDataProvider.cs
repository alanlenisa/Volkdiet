using Npgsql;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VolkDiet.Core.Data
{
    public class PgSqlDataProvider : IDataProvider
    {
        private string? _connectionString;
        public void SetConnectionString(string connectionString)
        {
            _connectionString = connectionString;
        }
        private string GetConnectionString()
        {
            //TODO:now is not necessary
            return "";

        }
        public void CreateDb()
        {
            string connectionString = _connectionString ?? GetConnectionString();
            var builder = new NpgsqlConnectionStringBuilder(connectionString);
            string storedDbName = builder.Database;
            builder.Database = "postgres";
            using (var connection = new NpgsqlConnection(builder.ConnectionString))
            {
                var query = $"CREATE DATABASE \"{storedDbName}\" WITH OWNER = '{builder.Username}'";

                var command = connection.CreateCommand();
                command.CommandText = query;
                command.Connection.Open();

                command.ExecuteNonQuery(); 

                Thread.Sleep(1000);

                command.Connection.Close();
            }
            for (int retry = 0; retry < 10; retry++)
            {
                if (DbExistsAsync().Result)
                {
                    break;
                }
                Thread.Sleep(1500);
            }
        }

        public async Task<bool> DbExistsAsync()          
        { 
            string connectionString = _connectionString ?? GetConnectionString();
            try
            {
                await using (var connection = new NpgsqlConnection(connectionString))
                {
                    connection.Open();
                    connection.Close();
                    return true;
                }
            }
            catch (Exception)
            {

                return false;
            }
            
        }

        public void InitDb()
        {
            string connectionString = _connectionString ?? GetConnectionString();
       

            using (var connection = new NpgsqlConnection(connectionString))
            {
                //TODO:now is so ugly!!! use migrations !!!
                var query = "CREATE TABLE IF NOT EXISTS \"__EFMigrationsHistory\" (" +
 "   \"MigrationId\" character varying(150) NOT NULL," +
 "   \"ProductVersion\" character varying(32) NOT NULL," +
 "   CONSTRAINT \"PK___EFMigrationsHistory\" PRIMARY KEY (\"MigrationId\")" +
 " );" +
 " " +
 " START TRANSACTION;" +
 " " +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"LAFParameters\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"LAF_Alg\" character varying(1) NOT NULL," +
 "     \"LAF_Sex\" character varying(1) NOT NULL," +
 "     \"LAF_AgeMin\" integer NOT NULL," +
 "     \"LAF_AgeMax\" integer NOT NULL," +
 "     \"LAF_Lvl\" integer NOT NULL," +
 "     \"LAF_Value\" double precision NOT NULL," +
 "     CONSTRAINT \"PK_LAFParameters\" PRIMARY KEY (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Languages\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"LAN_Name\" character varying(50) NULL," +
 "     \"LAN_Culture\" character varying(50) NULL," +
 "     \"LAN_ImageName\" character varying(200) NULL," +
 "     \"LAN_DisplayOrder\" integer NULL," +
 "     CONSTRAINT \"PK_Languages\" PRIMARY KEY (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Libraries\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"LIB_Desc\" character varying(50) NULL," +
 "     CONSTRAINT \"PK_Libraries\" PRIMARY KEY (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Roles\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"ROL_Desc\" character varying(50) NULL," +
 "     CONSTRAINT \"PK_Roles\" PRIMARY KEY (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"LocalizedStrings\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"LAN_ID\" integer NULL," +
 "     \"RES_Name\" character varying(250) NULL," +
 "     \"RES_Value\" text NULL," +
 "     CONSTRAINT \"PK_LocalizedStrings\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_LocalizedStrings_Languages\" FOREIGN KEY (\"LAN_ID\") REFERENCES \"Languages\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"LocalizedTables\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"LAN_ID\" integer NULL," +
 "     \"LTB_Table\" character varying(50) NULL," +
 "     \"LTB_Property\" character varying(50) NULL," +
 "     \"LTB_RecordID\" integer NULL," +
 "     \"LTB_Value\" text NULL," +
 "     CONSTRAINT \"PK_LocalizedTables\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_LocalizedTables_Languages\" FOREIGN KEY (\"LAN_ID\") REFERENCES \"Languages\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Categories\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"LIB_ID\" integer NOT NULL," +
 "     \"CAT_Desc\" character varying(50) NULL," +
 "     CONSTRAINT \"PK_Categories\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_Categories_Libraries\" FOREIGN KEY (\"LIB_ID\") REFERENCES \"Libraries\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Tenants\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"LIB_ID\" integer NULL," +
 "     \"IsDeleted\" boolean NOT NULL," +
 "     \"TEN_Desc\" character varying(200) NULL," +
 "     \"TEN_IsTemplate\" boolean NOT NULL," +
 "     CONSTRAINT \"PK_Tenants\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_Tenants_Libraries\" FOREIGN KEY (\"LIB_ID\") REFERENCES \"Libraries\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"RolesClaims\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"ROL_ID\" integer NULL," +
 "     \"RCL_Name\" text NULL," +
 "     \"RCL_Value\" text NULL," +
 "     CONSTRAINT \"PK_RolesClaims\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_RolesClaims_Roles\" FOREIGN KEY (\"ROL_ID\") REFERENCES \"Roles\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Aliments\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"ALI_Desc\" character varying(250) NULL," +
 "     \"LIB_ID\" integer NULL," +
 "     \"CAT_ID\" integer NULL," +
 "     \"ALI_K\" double precision NULL DEFAULT (((100)))," +
 "     \"ALI_LastMod\" timestamp without time zone NULL," +
 "     \"ALI_KCal\" double precision NULL," +
 "     \"ALI_Protein\" double precision NULL," +
 "     \"ALI_Lipids\" double precision NULL," +
 "     \"ALI_Choleterol\" double precision NULL," +
 "     \"ALI_Glucides\" double precision NULL," +
 "     \"ALI_Starch\" double precision NULL," +
 "     \"ALI_Fiber\" double precision NULL," +
 "     \"ALI_FibelSol\" double precision NULL," +
 "     \"ALI_Alcool\" double precision NULL," +
 "     \"ALI_Water\" double precision NULL," +
 "     \"ALI_Iron\" double precision NULL," +
 "     \"ALI_Calcium\" double precision NULL," +
 "     \"ALI_Sodium\" double precision NULL," +
 "     \"ALI_Potassium\" double precision NULL," +
 "     \"ALI_Phosphorus\" double precision NULL," +
 "     \"ALI_Zinc\" double precision NULL," +
 "     \"ALI_Magnesium\" double precision NULL," +
 "     \"ALI_Copper\" double precision NULL," +
 "     \"ALI_Selenium\" double precision NULL," +
 "     \"ALI_Chlorine\" double precision NULL," +
 "     \"ALI_Iudium\" double precision NULL," +
 "     \"ALI_TiaminaB1\" double precision NULL," +
 "     \"ALI_RiboflavinaB2\" double precision NULL," +
 "     \"ALI_VitC\" double precision NULL," +
 "     \"ALI_NiacinaB3\" double precision NULL," +
 "     \"ALI_VitB6\" double precision NULL," +
 "     \"ALI_VitB12\" double precision NULL," +
 "     \"ALI_VitAReteq\" double precision NULL," +
 "     \"ALI_VitEReteq\" double precision NULL," +
 "     \"ALI_VitE\" double precision NULL," +
 "     \"ALI_ASatur\" double precision NULL," +
 "     \"ALI_APoly\" double precision NULL," +
 "     \"ALI_AMono\" double precision NULL," +
 "     \"ALI_Glucose\" double precision NULL," +
 "     \"ALI_Fructose\" double precision NULL," +
 "     \"ALI_Galactose\" double precision NULL," +
 "     \"ALI_Sucrose\" double precision NULL," +
 "     \"ALI_Maltose\" double precision NULL," +
 "     \"ALI_Lactose\" double precision NULL," +
 "     CONSTRAINT \"PK_Aliments\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_Aliments_Categories\" FOREIGN KEY (\"CAT_ID\") REFERENCES \"Categories\" (\"ID\")," +
 "     CONSTRAINT \"FK_Aliments_Libraries\" FOREIGN KEY (\"LIB_ID\") REFERENCES \"Libraries\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Meals\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"TEN_ID\" integer NOT NULL," +
 "     \"MEA_Desc\" character varying(50) NULL," +
 "     CONSTRAINT \"PK_Meals\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_Meals_Tenants1\" FOREIGN KEY (\"TEN_ID\") REFERENCES \"Tenants\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Users\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"IsDeleted\" boolean NOT NULL," +
 "     \"TEN_ID\" integer NOT NULL," +
 "     \"LAN_ID\" integer NULL," +
 "     \"USR_Login\" character varying(50) NULL," +
 "     \"USR_Email\" character varying(100) NULL," +
 "     \"USR_DtReg\" timestamp without time zone NULL," +
 "     \"USR_Step\" character varying(1) NULL," +
 "     \"USR_PwdHash\" character varying(100) NULL," +
 "     CONSTRAINT \"PK_Users\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_Users_Languages\" FOREIGN KEY (\"LAN_ID\") REFERENCES \"Languages\" (\"ID\")," +
 "     CONSTRAINT \"FK_Users_Tenants\" FOREIGN KEY (\"TEN_ID\") REFERENCES \"Tenants\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"DietTemplates\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"TEN_ID\" integer NOT NULL," +
 "     \"TEM_Desc\" character varying(100) NULL," +
 "     \"TEM_PercCarbs\" double precision NULL," +
 "     \"TEM_PercProts\" double precision NULL," +
 "     \"TEM_PercFats\" double precision NULL," +
 "     CONSTRAINT \"PK_DietTemplates\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_DietTemplates_Meals\" FOREIGN KEY (\"TEN_ID\") REFERENCES \"Meals\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Checkups\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"USR_ID\" integer NOT NULL," +
 "     \"CUP_Date\" timestamp without time zone NULL," +
 "     \"CUP_Heigth\" double precision NULL," +
 "     \"CUP_Weight\" double precision NULL," +
 "     \"CUP_LeanMass\" double precision NULL," +
 "     \"CUP_FatMass\" double precision NULL," +
 "     \"CUP_Mis1\" double precision NULL," +
 "     \"CUP_Mis2\" double precision NULL," +
 "     \"CUP_Mis3\" double precision NULL," +
 "     \"CUP_Mis4\" double precision NULL," +
 "     CONSTRAINT \"PK_Checkups\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_Checkups_Users\" FOREIGN KEY (\"USR_ID\") REFERENCES \"Users\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"Diets\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"TEN_ID\" integer NOT NULL," +
 "     \"USR_ID\" integer NOT NULL," +
 "     \"DIE_Desc\" character varying(100) NULL," +
 "     \"DIE_Note\" character varying(200) NULL," +
 "     \"DIE_Requirement\" integer NULL," +
 "     \"DIE_LastMod\" timestamp without time zone NULL," +
 "     \"DIE_PerCarbs\" double precision NULL," +
 "     \"DIE_PerProts\" double precision NULL," +
 "     \"DIE_PerFats\" double precision NULL," +
 "     CONSTRAINT \"PK_Diets\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_Diets_Tenants\" FOREIGN KEY (\"TEN_ID\") REFERENCES \"Tenants\" (\"ID\")," +
 "     CONSTRAINT \"FK_Diets_Users\" FOREIGN KEY (\"USR_ID\") REFERENCES \"Users\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"FoodIntollerances\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"USR_ID\" integer NOT NULL," +
 "     \"FIN_Desc\" text NOT NULL," +
 "     \"FIN_Severity\" integer NOT NULL," +
 "     CONSTRAINT \"PK_FoodIntollerances\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_FoodIntollerances_Users\" FOREIGN KEY (\"USR_ID\") REFERENCES \"Users\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"UsersRoles\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"USR_ID\" integer NULL," +
 "     \"ROL_ID\" integer NULL," +
 "     CONSTRAINT \"PK_UsersRoles\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_UsersRoles_Roles\" FOREIGN KEY (\"ROL_ID\") REFERENCES \"Roles\" (\"ID\")," +
 "     CONSTRAINT \"FK_UsersRoles_Users\" FOREIGN KEY (\"USR_ID\") REFERENCES \"Users\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"DietTemplateDetails\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"TEM_ID\" integer NOT NULL," +
 "     \"TED_Day\" integer NOT NULL," +
 "     \"MEA_ID\" integer NOT NULL," +
 "     \"TED_PercKCal\" double precision NOT NULL," +
 "     CONSTRAINT \"PK_DietTemplateDetails\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_DietTemplateDetails_DietTemplates\" FOREIGN KEY (\"TEM_ID\") REFERENCES \"DietTemplates\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"DietDailyMeals\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"DIE_ID\" integer NOT NULL," +
 "     \"DME_Day\" integer NOT NULL," +
 "     \"MEA_ID\" integer NOT NULL," +
 "     \"DME_Date\" timestamp without time zone NULL," +
 "     CONSTRAINT \"PK_DietDailyMeals\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_DietDailyMeals_Diets\" FOREIGN KEY (\"DIE_ID\") REFERENCES \"Diets\" (\"ID\")," +
 "     CONSTRAINT \"FK_DietDailyMeals_Meals\" FOREIGN KEY (\"MEA_ID\") REFERENCES \"Meals\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE TABLE \"DietDailyDetails\" (" +
 "     \"ID\" integer GENERATED BY DEFAULT AS IDENTITY," +
 "     \"DME_ID\" integer NOT NULL," +
 "     \"ALI_ID\" integer NOT NULL," +
 "     \"DDE_Qty\" double precision NOT NULL," +
 "     CONSTRAINT \"PK_DietDailyDetails\" PRIMARY KEY (\"ID\")," +
 "     CONSTRAINT \"FK_DietDailyDetails_Aliments\" FOREIGN KEY (\"ALI_ID\") REFERENCES \"Aliments\" (\"ID\")," +
 "     CONSTRAINT \"FK_DietDailyDetails_DietDailyMeals\" FOREIGN KEY (\"DME_ID\") REFERENCES \"DietDailyMeals\" (\"ID\")" +
 "   );" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Aliments_CAT_ID\" ON \"Aliments\" (\"CAT_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Aliments_LIB_ID\" ON \"Aliments\" (\"LIB_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Categories_LIB_ID\" ON \"Categories\" (\"LIB_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Checkups_USR_ID\" ON \"Checkups\" (\"USR_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_DietDailyDetails_ALI_ID\" ON \"DietDailyDetails\" (\"ALI_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_DietDailyDetails_DME_ID\" ON \"DietDailyDetails\" (\"DME_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_DietDailyMeals_DIE_ID\" ON \"DietDailyMeals\" (\"DIE_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_DietDailyMeals_MEA_ID\" ON \"DietDailyMeals\" (\"MEA_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Diets_TEN_ID\" ON \"Diets\" (\"TEN_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Diets_USR_ID\" ON \"Diets\" (\"USR_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_DietTemplateDetails_TEM_ID\" ON \"DietTemplateDetails\" (\"TEM_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_DietTemplates_TEN_ID\" ON \"DietTemplates\" (\"TEN_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_FoodIntollerances_USR_ID\" ON \"FoodIntollerances\" (\"USR_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE UNIQUE INDEX \"IX_LocalizedStrings\" ON \"LocalizedStrings\" (\"LAN_ID\", \"RES_Name\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_LocalizedTables_LAN_ID\" ON \"LocalizedTables\" (\"LAN_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Meals_TEN_ID\" ON \"Meals\" (\"TEN_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_RolesClaims_ROL_ID\" ON \"RolesClaims\" (\"ROL_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Tenants_LIB_ID\" ON \"Tenants\" (\"LIB_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Users_LAN_ID\" ON \"Users\" (\"LAN_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_Users_TEN_ID\" ON \"Users\" (\"TEN_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_UsersRoles_ROL_ID\" ON \"UsersRoles\" (\"ROL_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   CREATE INDEX \"IX_UsersRoles_USR_ID\" ON \"UsersRoles\" (\"USR_ID\");" +
 "   END IF;" +
 " END $EF$;" +
 " " +
 " DO $EF$" +
 " BEGIN" +
 "   IF NOT EXISTS(SELECT 1 FROM \"__EFMigrationsHistory\" WHERE \"MigrationId\" = '20220719082507_InitialDbPgSql') THEN" +
 "   INSERT INTO \"__EFMigrationsHistory\" (\"MigrationId\", \"ProductVersion\")" +
 "   VALUES ('20220719082507_InitialDbPgSql', '6.0.7');" +
 "   END IF;" +
 " END $EF$;" +
 " COMMIT;";
                var command = connection.CreateCommand();
                command.CommandText = query;
                command.Connection.Open();
                try
                {
                    command.ExecuteNonQuery();
                }
                finally
                {
                    command.Connection.Close();


                }

            }
        }

        public string MakeConnString(string database, string server, bool trusted, string user, string password)
        {
           
            var builder = new NpgsqlConnectionStringBuilder
            {
                Host = server,
                Database = database.ToLowerInvariant(),
                Username =user,
                Password =password,
            };

            return builder.ConnectionString;
        }

    }
}
